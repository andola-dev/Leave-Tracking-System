<%= javascript_include_tag "jquery", "bootstrap-datepicker" %>
<%= stylesheet_link_tag "datepicker" %>
<script>
// Disable all fields if name field is not selected
function enable_fields() {
  $("input[type='text'],textarea").removeAttr("disabled");
  $('select#leave_leave_type_id').removeAttr("disabled");
}

function disable_fields(){
  $("input[type='text'],textarea").attr("disabled","true");
  $("input[type='text'],textarea").val('')
  $('select#leave_leave_type_id').attr("disabled","true");
  $("#leave_leave_type_id").val("");
}
$( document ).ready(function() {
  $(".checkbox").hide();
  if($("#leave_user_id").val()){  
    enable_fields();
  }else{
    disable_fields();
  }
});



$(function(){
  //$('.datepicker').datepicker({dateFormat: 'mm-dd-yyyy',"autoclose": true})
  //$("[data-behaviour~='datepicker']").datepicker({
  //    "format": "mm-dd-yyyy",
  //    "weekStart": 1,
  //    "autoclose": true
  //});
// $('select#leave_leave_type_id').attr("disabled","true");
var nowTemp = new Date();
var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
 
var checkin = $('#leave_from_date').datepicker({
  onRender: function(date) {
    return date.valueOf() < now.valueOf() ? 'disabled' : '';
  }
}).on('changeDate', function(ev) {

  if (ev.date.valueOf() > checkout.date.valueOf()) {
    var newDate = new Date(ev.date)
    newDate.setDate(newDate.getDate() + 1);
    checkout.setValue(newDate);
  }
  checkin.hide();
  $('#leave_to_date')[0].focus();
}).data('datepicker');
var checkout = $('#leave_to_date').datepicker({
  onRender: function(date) {
    return date.valueOf() <= checkin.date.valueOf() ? 'disabled' : '';
  }
}).on('changeDate', function(ev) {
  checkout.hide();
}).data('datepicker');
$('#leave_user_id').on('change', function() {
  if(this.value){  
    enable_fields();
    // $("#leave_days").attr("disabled","true"); 
  }else{
    disable_fields();
  }

});

});
</script>       
<%= form_for @leave ,:html => { :class => 'form-horizontal width_500' } do |f| %>
  <% if @leave.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@leave.errors.count, "error") %> prohibited this leave from being saved:</h2>

      <ul style="color:red;">
      <% @leave.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>  
    </div>
  <% end %>
  <div class="control-group">
    <label class='control-label'>User</label>
    <div class="controls">
      <%=f.select :user_id, User.find(:all, :conditions => [ "admin = ? and locked_at is null and name is NOT NULL and name != ''", false ] ,:order => 'name').collect {|c| [ c.name, c.id ]}, {:include_blank => '- Name -'},  :required => "true", :style => "width:220px;", :class => "leave_status_table"%>   
    </div>               
  </div>

  <div class="control-group">
    <label class='control-label'>From Date</label>
    <div class="controls">
      <%= f.text_field :from_date , :class => 'datepicker text_field',:required => "true" %>
    </div>
  </div>

  <div class="control-group">
    <label class='control-label'>To Date</label>
    <div class="controls">
      <%= f.text_field :to_date , :class => 'datepicker text_field',:required => "true", :onblur =>"calculate_date()" %>
    </div>
  </div>

  <div class="control-group">
    <label class='control-label'>#of Days</label>
    <div class="fl" style="margin-left: 21px">
      <%= f.text_field :days, :class => 'text_field',:required => "true", :maxlength=>4, :style => "width:50px" %>
    </div>
    <!-- If from_date and to_date is same enable a check box to confirm leave is half day or not -->
    <div class="fl" style="margin: 5px 0px 0px 15px;">
      <div class="checkbox">
        <label><%= check_box_tag("half_day", "half_day", false, :onclick=>"check_half_day();")%>Half day</label>
      </div>
    </div>
    
  </div>

  <div class="control-group">
    <label class='control-label'>Type</label>
    <div class="controls">    
       <%=f.select :leave_type_id, LeaveType.find(:all, :order => 'id', :conditions => ['type_name not in (?)', "Others"] ).collect {|c| [ c.type_name, c.id ]} + LeaveType.find(:all, :order => 'id', :conditions => ['type_name in (?)', "Others"] ).collect {|c| [ c.type_name, c.id ]}, {:include_blank => '- Select Leave Type -'},  :required => "true", :style => "width:220px;", :class => "leave_status_table" %>       

    <!--
       <select id="leave_leave_type_id" name="leave[leave_type_id]" style="width:100px">
  <%# LeaveType.find(:all, :order => 'id').each do |account|%>
    <option value="<%#=account.id%>" class="select_leave" style="color:<%#=account.color %>;" >
    <span class="select_leave" ></span>
    <%#=account.option %> 
    </option>
  <%#end%>     
       </select> 
    -->
    </div>    
  </div>
  <!-- <div id="leave_status" style="float:right;margin: -12% -2%;width:50%"></div> -->

   <div class="control-group">
    <label class='control-label'>Reason</label>
    <div class="controls">
      <%= f.text_area :reason, :rows=>5 %>
    </div>
  </div>

   <div class="form-actions">
    <div class="fl">
     <%= f.submit "Submit", :class => 'btn btn-primary', :onclick=>"return validate_date();" %>
     <%= link_to t('.cancel',:default => t("helpers.links.cancel")),leaves_path, :class => 'btn' %>
    </div>
    <div class="fr" id="show_history">
          
    </div>
   </div>


<% end %>
<script>

function validate_date(){
  var fr_value = $("#leave_from_date").val();
  var to_value = $("#leave_to_date").val();
  if (fr_value > to_value){
  alert("From Date must be less than the To Date!")
  return false;
  }

}
var d;
function calculate_date(){
    var date1 = $("#leave_from_date").val();
    var date2 = $("#leave_to_date").val();
    var z=1000*60*60*24;   
    var x=date1.split("/");     
    var y=date2.split("/");       
    var d1=new Date(x[2],(x[0]-1),x[1]);
    var d2=new Date(y[2],(y[0]-1),y[1]);         
    var a = d1.getTime();
    var b = d2.getTime();  
    d = (b-a)/z;   
    if (d>0){
    $('#leave_days').val(d);
    $(".checkbox").hide();
    }
    else if(d==0){
      $('#leave_days').val('1');
      $(".checkbox").show();
    }else{
    $('#leave_days').val('');
    $(".checkbox").hide();
    }
}
// Condition to check the leave day is half day or not
function check_half_day(){
  if(d == 0){
    if($("#half_day").prop("checked") == true){
      $('#leave_days').val('0.5');
    }
    else
      $('#leave_days').val('1');
  }
}
  // $("#leave_leave_type_id").change(function() {
  $(".leave_status_table").change(function() {
    var id = $("#leave_user_id").val();
    var leave_id = $("#leave_leave_type_id").val();
    // alert(leave_id);

    if( leave_id != null && leave_id != "" && id != null && id != "" ){
      $.ajax({
        type: "GET",
        url: "/get_leave_status/",
        dataType: 'json',
        async: true,
        data: {user_id: id},
        beforeSend: function(){
        //$("#task_loader").show();
        },
        success: function(data)
        {
          // alert('success')
        },
        error: function(data) {
        //$("#task_loader").hide();
        },
        complete: function(data) {
          $('#leave_status').html(data.responseText);
        }
      });
    }
    else{
      $('#leave_status').html("");
    }
  });

</script>
